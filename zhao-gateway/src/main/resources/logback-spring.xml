<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="20 seconds">

    <contextName>logback</contextName>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!-- 定义日志输出路径 -->
    <property name="FILE_PATH" value="./logs/zhao-gateway"/>
    <property name="APP_NAME" value="zhaogateway"/>

    <!--输出到控制台的日志格式-->
    <property name="CONSOLE_LOG_PATTERN"
              value="zhao|%d|${APP_NAME}|%highlight(${LOG_LEVEL_PATTERN:-%5p})|traceId|[%thread]|%cyan(%-40.40logger{39}[%L])|%m${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}|-|-|-|-|-|%n"/>

    <!--输出到文件的日志格式-->
    <property name="FILE_LOG_PATTERN"
              value="zhao|%d|${APP_NAME}|%highlight(${LOG_LEVEL_PATTERN:-%5p})|traceId|[%thread]|%cyan(%-40.40logger{39}[%L])|%m${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}|-|-|-|-|-|%n"/>


    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${FILE_PATH}/${APP_NAME}-debug.log</file>
        <encoder>
            <Pattern>${FILE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${FILE_PATH}/${APP_NAME}-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>300MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 下面为配置输出debug级别的日志,及以上级别日志,可以输出sql语句 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <!-- 下面为配置只输出debug级别的日志 -->
        <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--            <level>debug</level>-->
        <!--            &lt;!&ndash; <onMatch>:用于配置符合过滤条件的操作 &ndash;&gt;-->
        <!--            <onMatch>ACCEPT</onMatch>-->
        <!--            <onMismatch>DENY</onMismatch>-->
        <!--        </filter>-->
    </appender>


    <!--    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->

    <!--        <file>${FILE_PATH}/${APP_NAME}-info.log</file>-->

    <!--        <encoder>-->
    <!--            <Pattern>${FILE_LOG_PATTERN}</Pattern>-->
    <!--            <charset>UTF-8</charset>-->
    <!--        </encoder>-->

    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <fileNamePattern>${FILE_PATH}/${APP_NAME}-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
    <!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
    <!--                <maxFileSize>300MB</maxFileSize>-->
    <!--            </timeBasedFileNamingAndTriggeringPolicy>-->
    <!--            <maxHistory>30</maxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--            <level>info</level>-->
    <!--            <onMatch>ACCEPT</onMatch>-->
    <!--            <onMismatch>DENY</onMismatch>-->
    <!--        </filter>-->
    <!--    </appender>-->

    <!--    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <file>${FILE_PATH}/${APP_NAME}-warn.log</file>-->
    <!--        <encoder>-->
    <!--            <Pattern>${FILE_LOG_PATTERN}</Pattern>-->
    <!--            <charset>UTF-8</charset>-->
    <!--        </encoder>-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <fileNamePattern>${FILE_PATH}/${APP_NAME}-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
    <!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
    <!--                <maxFileSize>300MB</maxFileSize>-->
    <!--            </timeBasedFileNamingAndTriggeringPolicy>-->
    <!--            <maxHistory>30</maxHistory>-->
    <!--        </rollingPolicy>-->
    <!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--            <level>warn</level>-->
    <!--            <onMatch>ACCEPT</onMatch>-->
    <!--            <onMismatch>DENY</onMismatch>-->
    <!--        </filter>-->
    <!--    </appender>-->

    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${FILE_PATH}/${APP_NAME}-error.log</file>
        <!--日志文件输出格式-->
        <encoder>
            <Pattern>${FILE_LOG_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${FILE_PATH}/${APP_NAME}-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>300MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--开发环境:打印控制台-->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DEBUG_FILE"/>
            <!--            <appender-ref ref="INFO_FILE" />-->
            <!--            <appender-ref ref="WARN_FILE" />-->
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
    <!--线上环境:-->
    <springProfile name="prod">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DEBUG_FILE"/>
            <!--            <appender-ref ref="INFO_FILE" />-->
            <!--            <appender-ref ref="WARN_FILE" />-->
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <root level="info">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="DEBUG_FILE"/>
            <!--            <appender-ref ref="INFO_FILE" />-->
            <!--            <appender-ref ref="WARN_FILE" />-->
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>
</configuration>